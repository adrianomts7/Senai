/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.cadastroproduto.telas;

import com.mycompany.cadastroproduto.Moto;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author aluno.den
 */
public class cadastrarMoto extends javax.swing.JFrame {
    
    private ArrayList <Moto> listadeMotos = new ArrayList<>(); 
    
    /**
     * Creates new form cadastrarMoto
     */
    public cadastrarMoto() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        modeloTxt = new javax.swing.JTextField();
        Cadastrar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        marcaTxt = new javax.swing.JTextField();
        Listar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cilindradaTxt = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        telaTxt = new javax.swing.JTextArea();
        LimparTela = new javax.swing.JButton();
        Remove = new javax.swing.JButton();

        jButton4.setBackground(new java.awt.Color(51, 153, 0));
        jButton4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Cadastrar Moto");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cadastrar Moto", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Modelo:");

        modeloTxt.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        Cadastrar.setBackground(new java.awt.Color(51, 153, 0));
        Cadastrar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Cadastrar.setForeground(new java.awt.Color(255, 255, 255));
        Cadastrar.setText("Cadastrar Moto");
        Cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CadastrarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Marca:");

        marcaTxt.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        marcaTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marcaTxtActionPerformed(evt);
            }
        });

        Listar.setBackground(new java.awt.Color(0, 153, 153));
        Listar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Listar.setForeground(new java.awt.Color(255, 255, 255));
        Listar.setText("Listar");
        Listar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListarActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Cilindrada:");

        cilindradaTxt.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jButton3.setBackground(new java.awt.Color(153, 153, 0));
        jButton3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Editar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        telaTxt.setColumns(20);
        telaTxt.setRows(5);
        jScrollPane1.setViewportView(telaTxt);

        LimparTela.setBackground(new java.awt.Color(255, 0, 0));
        LimparTela.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        LimparTela.setForeground(new java.awt.Color(255, 255, 255));
        LimparTela.setText("Limpar tela");
        LimparTela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimparTelaActionPerformed(evt);
            }
        });

        Remove.setBackground(new java.awt.Color(255, 0, 0));
        Remove.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Remove.setForeground(new java.awt.Color(255, 255, 255));
        Remove.setText("Remover");
        Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(marcaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Cadastrar, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(modeloTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17)
                                .addComponent(Listar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cilindradaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Remove, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(LimparTela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cadastrar)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(marcaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modeloTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Listar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cilindradaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Remove, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LimparTela, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void marcaTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marcaTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_marcaTxtActionPerformed

    private void RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveActionPerformed
        String modelo = modeloTxt.getText().trim();
        boolean motoRemovido = false;
        
        for (int i = 0; i < listadeMotos.size(); i++ ){
            if(listadeMotos.get(i).getModelo().equalsIgnoreCase(modelo)){
                listadeMotos.remove(i);
                motoRemovido = true;
                break;
            }
        }
        
        modeloTxt.setText("");
        telaTxt.setText("");
        if (motoRemovido) {
            JOptionPane.showMessageDialog(null, "Moto removido com sucesso!");
            
        } else {
            JOptionPane.showMessageDialog(null, "Carro não foi removido");
        }
    }//GEN-LAST:event_RemoveActionPerformed

    private void CadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CadastrarActionPerformed
        try {
            String marca = marcaTxt.getText().trim();
            String modelo = modeloTxt.getText().trim();
            int cilindrada = Integer.parseInt(cilindradaTxt.getText());
            
            if (marca.isEmpty() || modelo.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Os campos não podem estar vazio");
                return;
            }
            
            if (cilindrada <= 0) {
                JOptionPane.showMessageDialog(null, "Digite Cilindradas  validas");
                return;
            }
            
            Moto m = new Moto(cilindrada, marca, modelo);
            
            if (listadeMotos.add(m)) {
                JOptionPane.showMessageDialog(null, "Moto adicionada com sucesso");
                marcaTxt.setText("");
                modeloTxt.setText("");
                cilindradaTxt.setText("");
                telaTxt.setText("");
            } else {
                JOptionPane.showMessageDialog(null, "Moto não foi adicionada");
            }    
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Número de cilindradas invalido!");
        }
    }//GEN-LAST:event_CadastrarActionPerformed

    private void ListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListarActionPerformed
        marcaTxt.setText("");
        modeloTxt.setText("");
        cilindradaTxt.setText("");
        telaTxt.setText("");
        
        if (listadeMotos.isEmpty()) {
            JOptionPane.showMessageDialog(null, "A lista de moto está vazia!");
            return;
        }
        
        for(Moto m : listadeMotos) {
            telaTxt.append("\nMarca: " + m.getMarca() + "\nModelo: " + m.getModelo() + "\nCilindrada: " + m.getCilindrada());
        }
        
    }//GEN-LAST:event_ListarActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            JOptionPane.showMessageDialog(null, "Para editar de forma correta, Digite o modelo antigo e depois você digitará o nome do novo modelo da moto");
            
            if (listadeMotos.isEmpty()) {
                JOptionPane.showMessageDialog(null, "A lista de moto está vazia!");
                return;
            }
            
            String marca = marcaTxt.getText().trim();
            String modelo = modeloTxt.getText().trim();
            int cilindrada = Integer.parseInt(cilindradaTxt.getText());;
            boolean alterouMoto = false;
            
            if (marca.isEmpty() || modelo.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Os campos não podem estar vazio");
                return;
            }

             if (cilindrada <= 0) {
                JOptionPane.showMessageDialog(null, "Digite Cilindradas  validas");
                return;
            }

            for(Moto m : listadeMotos) {
                if(m.getModelo().equalsIgnoreCase(modelo)) {
                    String novoModelo = JOptionPane.showInputDialog(null, "Digite o novo modelo da Moto: ", JOptionPane.QUESTION_MESSAGE);

                    if (novoModelo.isEmpty()) {
                        JOptionPane.showMessageDialog(null, "Digite um modelo valido");
                        return;
                    }

                    m.setModelo(novoModelo);
                    m.setMarca(marca);
                    m.setCilindrada(cilindrada);
                    alterouMoto = true;
                    break;
                }
            }

            if (alterouMoto) {
                modeloTxt.setText("");
                marcaTxt.setText("");
                cilindradaTxt.setText("");
                telaTxt.setText("");
                JOptionPane.showMessageDialog(null, "Dados da moto alterado com sucesso!");
            } else {
                JOptionPane.showMessageDialog(null, "Os dados não foram alterados!");
            }    
            
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Número de portas invalidos");
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void LimparTelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimparTelaActionPerformed
        modeloTxt.setText("");
        marcaTxt.setText("");
        cilindradaTxt.setText("");
        telaTxt.setText("");

    }//GEN-LAST:event_LimparTelaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cadastrarMoto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cadastrarMoto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cadastrarMoto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cadastrarMoto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cadastrarMoto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cadastrar;
    private javax.swing.JButton LimparTela;
    private javax.swing.JButton Listar;
    private javax.swing.JButton Remove;
    private javax.swing.JTextField cilindradaTxt;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField marcaTxt;
    private javax.swing.JTextField modeloTxt;
    private javax.swing.JTextArea telaTxt;
    // End of variables declaration//GEN-END:variables
}
