/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.cadastroanimais.views;

import com.mycompany.cadastroanimais.controller.AnimalController;
import com.mycompany.cadastroanimais.models.Animal;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aluno.den
 */
public class AnimalForm extends javax.swing.JFrame {
    
    private AnimalController controller = new AnimalController();
    private DefaultTableModel tabelaModelo;
    private int idSelecionado = -1;
    private boolean modoAtualizado = false;
    private boolean listandoDados = false;
    
    private void atualizarTabela() {
        tabelaModelo.setRowCount(0);
        
        ArrayList<Animal> lista = controller.listar();
        
        for(Animal a : lista) {
            tabelaModelo.addRow(new Object[]{ a.getId(), a.getNome(), a.getEspecie(), a.getIdade() });
        }
        
    }        
    
    private void buscarDinamicamente() {
        String nomeBuscado = txtBuscar.getText().trim();
        
        tabelaModelo.setRowCount(0);
        ArrayList<Animal> lista = controller.buscarPorNome(nomeBuscado);
        
        for (Animal a : lista) {
           tabelaModelo.addRow(new Object[]{ a.getId(), a.getNome(), a.getEspecie(), a.getIdade() }); 
        }
        
        
    }    
     
    private void limparTela() {
        txtNome.setText("");
        txtEspecie.setText("");
        txtIdade.setText("");
        txtBuscar.setText("");
        
        idSelecionado -= 1;
        
        tabelaModelo.setRowCount(0);
    }
    
    /**
     * Creates new form AnimalForm
     */
    public AnimalForm() {
        initComponents();
        tabelaModelo = (DefaultTableModel) tbLista.getModel();
        
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter(){
           @Override
           public void keyReleased(java.awt.event.KeyEvent evt) {
               buscarDinamicamente();
           } 
        });
        
        tbLista.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                int linhaSelecionado = tbLista.getSelectedRow();
                
                if (linhaSelecionado != -1) {
                    idSelecionado = (int) tbLista.getValueAt(linhaSelecionado, 0);
                    
                    txtNome.setText(String.valueOf(tbLista.getValueAt(linhaSelecionado, 1)));
                    txtEspecie.setText(String.valueOf(tbLista.getValueAt(linhaSelecionado, 2)));
                    txtIdade.setText(String.valueOf(tbLista.getValueAt(linhaSelecionado, 3)));
                    
                    modoAtualizado = true;
                }
                
            }
        });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtIdade = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtEspecie = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        Cadastrar = new javax.swing.JButton();
        Listar = new javax.swing.JButton();
        Atualizar = new javax.swing.JButton();
        Remover = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbLista = new javax.swing.JTable();
        LimparTela = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Especie:");

        txtIdade.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Nome:");

        txtNome.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Idade:");

        txtEspecie.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Busca:");

        txtBuscar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });

        Cadastrar.setBackground(new java.awt.Color(0, 153, 0));
        Cadastrar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Cadastrar.setForeground(new java.awt.Color(255, 255, 255));
        Cadastrar.setText("Cadastrar");
        Cadastrar.setToolTipText("");
        Cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CadastrarActionPerformed(evt);
            }
        });

        Listar.setBackground(new java.awt.Color(0, 102, 0));
        Listar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Listar.setForeground(new java.awt.Color(255, 255, 255));
        Listar.setText("Listar");
        Listar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListarActionPerformed(evt);
            }
        });

        Atualizar.setBackground(new java.awt.Color(0, 0, 204));
        Atualizar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Atualizar.setForeground(new java.awt.Color(255, 255, 255));
        Atualizar.setText("Atualizar");
        Atualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AtualizarActionPerformed(evt);
            }
        });

        Remover.setBackground(new java.awt.Color(204, 0, 0));
        Remover.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Remover.setForeground(new java.awt.Color(255, 255, 255));
        Remover.setText("Remover");
        Remover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoverActionPerformed(evt);
            }
        });

        tbLista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Nome", "Especie", "Idade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbLista);

        LimparTela.setBackground(new java.awt.Color(204, 0, 0));
        LimparTela.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        LimparTela.setForeground(new java.awt.Color(255, 255, 255));
        LimparTela.setText("Limpar");
        LimparTela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimparTelaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtIdade)
                    .addComponent(txtNome)
                    .addComponent(txtEspecie)
                    .addComponent(txtBuscar)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Cadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Listar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Atualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Remover, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(LimparTela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(0, 6, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEspecie, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtIdade, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Listar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Atualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Remover, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LimparTela, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarActionPerformed

    private void ListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListarActionPerformed
        atualizarTabela();
    }//GEN-LAST:event_ListarActionPerformed

    private void CadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CadastrarActionPerformed
        String nome = txtNome.getText().trim();
        String especie = txtEspecie.getText().trim();
        int idade;
        
        try {
            idade = Integer.parseInt(txtIdade.getText().trim());
            
            if (idade <= 0 || idade >= 20) {
                JOptionPane.showMessageDialog(null, "Idade invalida");
            }
            
            if (!nome.isEmpty() && !especie.isEmpty()) {
                controller.cadastrar(nome, especie, idade);
                JOptionPane.showMessageDialog(null, "Animal cadastrado com sucesso!");
            }
            
            txtNome.setText("");
            txtEspecie.setText("");
            txtIdade.setText("");
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Digite um número inteiro valido pata idade");
        }
            
        
    }//GEN-LAST:event_CadastrarActionPerformed

    private void RemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoverActionPerformed
        int linhaSelecionada = tbLista.getSelectedRow();
        
        if (linhaSelecionada != -1) {
            int id = (int) tbLista.getValueAt(linhaSelecionada, 0);
            controller.remover(id);
            atualizarTabela();
            JOptionPane.showMessageDialog(null, "Animal removido com sucesso");
            limparTela();
        }
        
    }//GEN-LAST:event_RemoverActionPerformed

    private void AtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AtualizarActionPerformed
        if (idSelecionado == -1) {
            JOptionPane.showMessageDialog(null, "Selecione o animal na tabela pra poder atualizar");
        }
        
        String nome = txtNome.getText().trim();
        String especie = txtEspecie.getText().trim();
        int idade;
        
        try {
            idade = Integer.parseInt(txtIdade.getText().trim());
            
            if (idade <= 0 || idade >= 20) {
                JOptionPane.showMessageDialog(null, "Idade invalida");
            }
            
            if (!nome.isEmpty() && !especie.isEmpty()) {
                controller.atualizar(idSelecionado, nome, especie, idade);
                JOptionPane.showMessageDialog(null, "Animal Atualizado com sucesso!");
            }
            
            txtNome.setText("");
            txtEspecie.setText("");
            txtIdade.setText("");
            txtBuscar.setText("");
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Digite um número inteiro valido pata idade");
        }
        
    }//GEN-LAST:event_AtualizarActionPerformed

    private void LimparTelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimparTelaActionPerformed
        limparTela();
    }//GEN-LAST:event_LimparTelaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AnimalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AnimalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AnimalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AnimalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AnimalForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Atualizar;
    private javax.swing.JButton Cadastrar;
    private javax.swing.JButton LimparTela;
    private javax.swing.JButton Listar;
    private javax.swing.JButton Remover;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbLista;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtEspecie;
    private javax.swing.JTextField txtIdade;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
}
